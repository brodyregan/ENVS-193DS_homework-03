---
title: "homework-03"
format: html
---

[View this repository on GitHub](https://github.com/brodyregan/ENVS-193DS_homework-03)
[View the rendered website] (https://brodyregan.github.io/ENVS-193DS_homework-03/code/homework-03.html)

```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(here)
library(gt)
library(flextable)
library(janitor)
library(readxl)
```

## Problem 1:
## a.
[I could calculate the mean amount of time I practice at each location to compare how long I tend to practice at the studio or at home. This comparison would be informative because the studio has less distractions, likely encouraging me to practice longer than I do at home.]

## b.

```{r, message=FALSE, warning=FALSE}
data <- read_csv("../data/ENVS 193 Data - Sheet1 (2).csv") |> 
  clean_names()
```

```{r}
 summary_data <- data |>
  group_by(location) |>
  summarise(
    mean_duration = mean(duration_hr),
    sd_duration = sd(duration_hr)
  )
view(summary_data)
```

```{r}
ggplot(data, aes(x = location, y = duration_hr, color = location)) +
  geom_jitter(width = 0.2, alpha = 0.6, size = 2) +
  geom_point(data = summary_data, aes(x = location, y = mean_duration), 
             shape = 23, size = 4, fill = "black") +
  geom_errorbar(data = summary_data, aes(x = location, ymin = mean_duration - sd_duration, ymax = mean_duration + sd_duration),
                width = 0.2, color = "black", inherit.aes = FALSE) +
  scale_color_manual(values = c("Home" = "blue", "Studio" = "orange")) +
  labs(
    title = "Practice Duration by Location",
    x = "Practice Location",
    y = "Practice Duration (hours)"
  ) +
  theme_light(base_size = 14) +
  theme(legend.position = "none")
```

## c. 
[Figure 1: Practicing in the studio tends to allow for longer practice time. Data Source: Brody Regan. Points represent observations of practice time (in hours) at practice location (Home or Studio). The center black diamond represents the mean time, and error bars show Â±1 standard deviation), both respective to their site. Colors represent location (blue = home, orange = studio).]

## d. 

```{r}
data_summary <- data |>
  group_by(location) |>
  summarize(
    mean_duration = round(mean(duration_hr), 1),
    sd_duration = round(sd(duration_hr), 1),
    count = n()
  )

# Create gt table
data_summary |>
  gt() |>
  cols_label(
    location = "Practice Location",
    mean_duration = "Mean Duration (hours)",
    sd_duration = "SD (hours)",
    count = "Number of Sessions"
  ) |>
  tab_header(title = "Practice Duration Summary by Location")

```


## Problem 2:
## a.
[Affective visualization for my data will take inspiration from the painted quilt using colored strips. The color of each strip will represent the instrument practiced and the opacity of it will represent the amount practiced in one session. This creates a sense of emotion and energy because the longer practices will have more extreme (bright) colors, while less time will have lighter colors. I would also like to include a shape for each bar and have the size correspond to the amount of meals ate. For example, larger shapes represent more meals ate before practicing that day.]


## b. 
[Photo](../data/IMG_5716.jpg){width=400px}



## c.
```{r draft-quilt, echo=TRUE, message=FALSE}

# 1. Read and preprocess
df <- read_csv("../data/ENVS 193 Data - Sheet1 (2).csv") %>%
  mutate(
    Date = as.Date(`Date:`, format = "%Y-%m-%d"),
    SessionID = row_number()
  )

# 2. Map instruments to warm/cool hues
palette <- c(
  "Drums" = "#E64A19",
  "Guitar" = "#1976D2",
  "Bass" = "#388E3C"
)

# 3. Plot: horizontal strips with opacity = duration
ggplot(df, aes(x = SessionID, y = 1,
               fill = `Instrument Practiced:`,
               alpha = `Duration (hr)` / max(`Duration (hr)`))) +
  geom_tile(width = 0.9, height = 0.6) +
  # overlay circles for meals
  geom_point(aes(size = `Meals Ate:`), shape = 21, color = "gray20", fill = "white") +
  scale_fill_manual(values = palette) +
  scale_alpha(range = c(0.3, 1), guide = "none") +
  scale_size_area(max_size = 6) +
  theme_void() +
  theme(
    legend.position = "bottom",
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
  ) +
  labs(
    title = "Rhythmic Strips: A Semester of Practice",
    fill = "Instrument",
    size = "Meals Ate"
  )

```




































